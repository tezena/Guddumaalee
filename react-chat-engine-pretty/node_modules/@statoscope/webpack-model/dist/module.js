"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nodeModule = exports.moduleReasonResource = exports.moduleResource = exports.moduleNameResource = exports.matchRxValue = exports.concatenatedIdRx = exports.extractFileRx = void 0;
exports.extractFileRx = /!?([^!]+)$/;
exports.concatenatedIdRx = /(.+) \+ \d+ modules$/;
function matchRxValue(rx, string) {
    const [, match] = string.match(rx) || [];
    return match || null;
}
exports.matchRxValue = matchRxValue;
function moduleNameResource(name) {
    if (name && !name.includes('(ignored)') && !name.startsWith('multi')) {
        const normalized = matchRxValue(exports.extractFileRx, name.replace('(webpack)', 'node_modules/webpack'));
        if (!normalized) {
            return name;
        }
        const nameResource = matchRxValue(exports.concatenatedIdRx, normalized) || normalized;
        if (nameResource.startsWith('./') || nameResource.startsWith('.\\')) {
            return nameResource.slice(2);
        }
        return nameResource;
    }
    return null;
}
exports.moduleNameResource = moduleNameResource;
function moduleResource(module) {
    if ((module === null || module === void 0 ? void 0 : module.moduleType) &&
        ((module === null || module === void 0 ? void 0 : module.moduleType) === 'provide-module' ||
            (module === null || module === void 0 ? void 0 : module.moduleType) === 'consume-shared-module')) {
        return module.name;
    }
    return moduleNameResource(module && module.name);
}
exports.moduleResource = moduleResource;
function moduleReasonResource(reason) {
    return moduleNameResource(reason && reason.moduleName);
}
exports.moduleReasonResource = moduleReasonResource;
function nodeModule(path) {
    if (!path) {
        return null;
    }
    const lastNodeModulesRx = /.*(?:^|[/\\])node_modules[/\\](@.+?[/\\][^/\\\s]+|[^/\\\s]+)/;
    const [input, name] = path.match(lastNodeModulesRx) || [];
    const isRoot = input
        ? !/.*(?:^|[/\\])node_modules[/\\].+[/\\]node_modules[/\\]/.test(input)
        : false;
    return name ? { path: input, name, isRoot } : null;
}
exports.nodeModule = nodeModule;
//# sourceMappingURL=module.js.map