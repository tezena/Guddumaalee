import { Webpack } from '../webpack';
import type { EntrypointItem } from '../types';
import Module = Webpack.Module;
import RawModule = Webpack.RawModule;
import Compilation = Webpack.Compilation;
import Chunk = Webpack.Chunk;
import Asset = Webpack.Asset;
import Reason = Webpack.Reason;
import RawReason = Webpack.RawReason;
export declare function collector<TResult, TID, TEntry = TResult>(from: TEntry[], isItem: (entry: TEntry) => boolean, getChildren: (entry: TEntry) => TEntry[], getId: (item: TResult) => TID): Map<TID, TResult>;
export declare function collectRawModules(compilation: Compilation): RawModule[];
export declare function collectRawModulesFromArray(modules: Module[]): Map<string, RawModule>;
export declare function collectRawReasonsFromArray(modules: Reason[]): Map<number, RawReason>;
export declare function collectRawChunks(compilation: Compilation): Chunk[];
export declare function collectRawAssets(compilation: Compilation): Asset[];
export declare function collectRawEntrypoints(compilation: Compilation): EntrypointItem[];
