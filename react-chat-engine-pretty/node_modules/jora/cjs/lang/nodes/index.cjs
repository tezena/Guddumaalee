'use strict';

const Arg1 = require('./Arg1.cjs');
const Array = require('./Array.cjs');
const Binary = require('./Binary.cjs');
const Block = require('./Block.cjs');
const Compare = require('./Compare.cjs');
const Conditional = require('./Conditional.cjs');
const Context = require('./Context.cjs');
const Current = require('./Current.cjs');
const Data = require('./Data.cjs');
const Declarator = require('./Declarator.cjs');
const Definition = require('./Definition.cjs');
const Filter = require('./Filter.cjs');
const Function = require('./Function.cjs');
const GetProperty = require('./GetProperty.cjs');
const Identifier = require('./Identifier.cjs');
const Literal = require('./Literal.cjs');
const Map$1 = require('./Map.cjs');
const MapRecursive = require('./MapRecursive.cjs');
const Method = require('./Method.cjs');
const MethodCall = require('./MethodCall.cjs');
const Object$1 = require('./Object.cjs');
const ObjectEntry = require('./ObjectEntry.cjs');
const Parentheses = require('./Parentheses.cjs');
const Pick = require('./Pick.cjs');
const Pipeline = require('./Pipeline.cjs');
const Placeholder = require('./Placeholder.cjs');
const Reference = require('./Reference.cjs');
const SliceNotation = require('./SliceNotation.cjs');
const SortingFunction = require('./SortingFunction.cjs');
const Spread = require('./Spread.cjs');
const Template = require('./Template.cjs');
const Unary = require('./Unary.cjs');

const nodes = {
    Arg1,
    Array,
    Binary,
    Block,
    Compare,
    Conditional,
    Context,
    Current,
    Data,
    Declarator,
    Definition,
    Filter,
    Function,
    GetProperty,
    Identifier,
    Literal,
    Map: Map$1,
    MapRecursive,
    Method,
    MethodCall,
    Object: Object$1,
    ObjectEntry,
    Parentheses,
    Pick,
    Pipeline,
    Placeholder,
    Reference,
    SliceNotation,
    SortingFunction,
    Spread,
    Template,
    Unary
};

const extract = type => new Map(
    Object.entries(nodes)
        .map(([key, value]) => [key, value[type]])
        .filter(([, value]) => typeof value === 'function')
);

const build = {};
extract('build').forEach(
    (value, key) => (build[key] = value)
);

const compile = extract('compile');
const walk = extract('walk');
const stringify = extract('stringify');
const suggest = extract('suggest');

exports.build = build;
exports.compile = compile;
exports.nodes = nodes;
exports.stringify = stringify;
exports.suggest = suggest;
exports.walk = walk;
