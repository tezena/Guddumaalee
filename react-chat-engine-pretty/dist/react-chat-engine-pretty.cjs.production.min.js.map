{"version":3,"file":"react-chat-engine-pretty.cjs.production.min.js","sources":["../src/functions/isMobile.ts","../src/functions/getOtherUsers.ts","../src/components/OtherAvatars.tsx","../src/functions/dates.ts","../src/components/ChatHeader.tsx","../src/components/ChatForm.tsx","../src/components/ChatCard.tsx","../src/components/MessageForm.tsx","../src/components/ChatListHeader.tsx","../src/index.tsx"],"sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\nexport const useIsMobile = () => {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size[0] < 667;\r\n};\r\n","import { ChatObject, PersonObject } from \"react-chat-engine-advanced\";\r\n\r\nexport const getOtherUsers = (\r\n  chat: ChatObject,\r\n  username: string\r\n): PersonObject[] => {\r\n  const otherMembers = chat.people.filter(\r\n    (member) => member.person.username !== username\r\n  );\r\n  return otherMembers.map(member => member.person)\r\n};\r\n\r\nexport const getChatTitle = (chat: ChatObject, username: string) => {\r\n  const otherUsers = getOtherUsers(chat, username)\r\n  if (otherUsers.length === 1) {\r\n    return `${otherUsers[0].first_name} ${otherUsers[0].last_name}`;\r\n  } else {\r\n    var title = '';\r\n    for (let i = 0; i < otherUsers.length; i++) {\r\n      if (i === otherUsers.length - 1) {\r\n        title += otherUsers[i].first_name;\r\n      } else if (i === otherUsers.length - 2) {\r\n        title += otherUsers[i].first_name + ' & ';\r\n      } else {\r\n        title += otherUsers[i].first_name + ', ';\r\n      }\r\n    }\r\n    return title;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport { Avatar, ChatObject } from 'react-chat-engine-advanced';\r\nimport { getOtherUsers } from '../functions/getOtherUsers';\r\ninterface OtherAvatarProps {\r\n  chat: ChatObject;\r\n  username: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst OtherAvatars = (props: OtherAvatarProps) => {\r\n  const otherUsers = getOtherUsers(props.chat, props.username);\r\n  const memberOne = otherUsers.length > 0 ? otherUsers[0] : undefined;\r\n  const memberTwo = otherUsers.length > 1 ? otherUsers[1] : undefined;\r\n  const memberThree = otherUsers.length > 2 ? otherUsers[2] : undefined;\r\n\r\n  return (\r\n    <div style={props.style}>\r\n      <Avatar\r\n        className=\"ce-custom-header-avatar\"\r\n        avatarUrl={memberOne?.avatar}\r\n        username={memberOne?.username}\r\n        style={{\r\n          ...styles.avatar,\r\n          ...(memberOne?.is_online ? styles.online : styles.offline),\r\n          ...(memberTwo && {\r\n            width: '28px',\r\n            height: '28px',\r\n            lineHeight: '28px',\r\n            fontSize: '12px',\r\n          }),\r\n          ...(memberThree && {\r\n            width: '21px',\r\n            height: '21px',\r\n            lineHeight: '21px',\r\n            fontSize: '10px',\r\n          }),\r\n        }}\r\n      />\r\n\r\n      {memberTwo && (\r\n        <Avatar\r\n          className=\"ce-custom-header-avatar\"\r\n          avatarUrl={memberTwo?.avatar}\r\n          username={memberTwo?.username}\r\n          style={{\r\n            ...styles.avatar,\r\n            ...(memberOne?.is_online ? styles.online : styles.offline),\r\n            ...{\r\n              width: '28px',\r\n              height: '28px',\r\n              lineHeight: '28px',\r\n              fontSize: '12px',\r\n              top: 'calc(40px - 28px - 6px)',\r\n              left: 'calc(40px - 28px)',\r\n            },\r\n            ...(memberThree && {\r\n              width: '21px',\r\n              height: '21px',\r\n              lineHeight: '21px',\r\n              fontSize: '10px',\r\n              top: '-5px',\r\n              left: '22px',\r\n            }),\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {memberThree && (\r\n        <Avatar\r\n          className=\"ce-custom-header-avatar\"\r\n          avatarUrl={memberThree?.avatar}\r\n          username={memberThree?.username}\r\n          style={{\r\n            ...styles.avatar,\r\n            ...(memberThree?.is_online ? styles.online : styles.offline),\r\n            ...{\r\n              width: '21px',\r\n              height: '21px',\r\n              lineHeight: '21px',\r\n              fontSize: '10px',\r\n              top: '-7px',\r\n              left: '11px',\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  avatar: {\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    top: '22px',\r\n    marginLeft: '12px',\r\n    width: '38px',\r\n    height: '38px',\r\n    fontSize: '14px',\r\n    lineHeight: '40px',\r\n    transition: 'all 0.66s ease',\r\n  } as React.CSSProperties,\r\n  online: {\r\n    border: '1px solid rgb(24, 144, 255)',\r\n    boxShadow: 'rgb(24 144 255 / 35%) 0px 2px 7px',\r\n  } as React.CSSProperties,\r\n  offline: {\r\n    border: '1px solid #fa541c',\r\n    boxShadow: 'rgb(245 34 45 / 35%) 0px 2px 7px',\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport default OtherAvatars;\r\n","export const nowTimeStamp = () => {\r\n    return new Date()\r\n      .toISOString()\r\n      .replace(\"T\", \" \")\r\n      .replace(\"Z\", `${Math.floor(Math.random() * 1000)}+00:00`);\r\n  };\r\n  ","import React, { CSSProperties } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { ChatHeaderProps, ChatObject } from 'react-chat-engine-advanced';\r\n\r\nimport {\r\n  DeleteFilled,\r\n  PaperClipOutlined,\r\n  LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport OtherAvatars from './OtherAvatars';\r\n\r\nimport { nowTimeStamp } from '../functions/dates';\r\nimport { getOtherUsers, getChatTitle } from '../functions/getOtherUsers';\r\n\r\nimport { useState } from 'react';\r\n\r\ninterface CustomChatHeaderProps extends ChatHeaderProps {\r\n  chat?: ChatObject;\r\n  projectId: string;\r\n  username: string;\r\n  secret: string;\r\n  onDeleteChat: (oldChat: ChatObject) => void;\r\n}\r\n\r\nconst ChatHeader = (props: CustomChatHeaderProps) => {\r\n  // State\r\n  const [isFilePickerLoading, setFilePickerLoading] = useState(false);\r\n  const [isDeleteLoading, setDeleteLoading] = useState(false);\r\n\r\n  const otherMembers = props.chat\r\n    ? getOtherUsers(props.chat, props.username)\r\n    : [];\r\n  const otherMember = otherMembers.length > 0 ? otherMembers[0] : undefined;\r\n\r\n  const onFilesSelect: React.ChangeEventHandler<HTMLInputElement> = e => {\r\n    if (!props.chat) return;\r\n    setFilePickerLoading(true);\r\n\r\n    const headers = {\r\n      'Project-ID': props.projectId,\r\n      'User-Name': props.username,\r\n      'User-Secret': props.secret,\r\n    };\r\n\r\n    const formdata = new FormData();\r\n    const filesArr = Array.from(e.target.files !== null ? e.target.files : []);\r\n    filesArr.forEach(file => formdata.append('attachments', file, file.name));\r\n    formdata.append('created', nowTimeStamp());\r\n    formdata.append('sender_username', props.username);\r\n    formdata.append('custom_json', JSON.stringify({}));\r\n\r\n    axios\r\n      .post(\r\n        `https://api.chatengine.io/chats/${props.chat.id}/messages/`,\r\n        formdata,\r\n        { headers }\r\n      )\r\n      .then(() => setFilePickerLoading(false))\r\n      .catch(() => setFilePickerLoading(false));\r\n  };\r\n\r\n  const onDelete = () => {\r\n    if (!props.chat) return;\r\n    setDeleteLoading(true);\r\n\r\n    const headers = {\r\n      'Project-ID': props.projectId,\r\n      'User-Name': props.username,\r\n      'User-Secret': props.secret,\r\n    };\r\n\r\n    axios\r\n      .delete(`https://api.chatengine.io/chats/${props.chat.id}/`, { headers })\r\n      .then(r => {\r\n        setDeleteLoading(false);\r\n        props.onDeleteChat(r.data);\r\n      });\r\n  };\r\n\r\n  if (!otherMember || !props.chat)\r\n    return <div className=\"ce-custom-chat-header\" style={styles.chatHeader} />;\r\n\r\n  return (\r\n    <div className=\"ce-custom-chat-header\" style={styles.chatHeader}>\r\n      <OtherAvatars\r\n        chat={props.chat}\r\n        username={props.username}\r\n        style={styles.chatAvatars}\r\n      />\r\n\r\n      <div className=\"ce-custom-header-text\" style={styles.headerText}>\r\n        <div className=\"ce-custom-header-title\" style={styles.headerTitle}>\r\n          {getChatTitle(props.chat, props.username)}\r\n        </div>\r\n        <div\r\n          className=\"ce-custom-header-subtitle\"\r\n          style={styles.headerSubtitle}\r\n        >  \r\n           <h6 style={styles.headerSubtitleMain}>{props.username}</h6>\r\n          <p>{otherMember.is_online ? 'Online' : 'Offline'}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"ce-custom-header-icon-wrapper\" style={styles.iconWrapper}>\r\n        <form style={{ display: 'inline-block' }}>\r\n          <label htmlFor=\"ce-files-picker\">\r\n            {isFilePickerLoading ? (\r\n              <LoadingOutlined\r\n                style={{ color: 'rgb(153, 153, 153)' }}\r\n                className=\"ce-custom-header-icon\"\r\n              />\r\n            ) : (\r\n              <PaperClipOutlined\r\n                style={styles.headerIcon}\r\n                className=\"ce-custom-header-icon\"\r\n              />\r\n            )}\r\n          </label>\r\n          <input\r\n            multiple\r\n            id=\"ce-files-picker\"\r\n            style={{ visibility: 'hidden', height: '0px', width: '0px' }}\r\n            type=\"file\"\r\n            onChange={onFilesSelect}\r\n          />\r\n        </form>\r\n\r\n        {isDeleteLoading ? (\r\n          <LoadingOutlined\r\n            style={{ color: 'rgb(153, 153, 153)' }}\r\n            className=\"ce-custom-header-icon\"\r\n          />\r\n        ) : (\r\n          <DeleteFilled\r\n            onClick={() => onDelete()}\r\n            className=\"ce-custom-header-icon\"\r\n            style={styles.headerIcon}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <style>{`.ce-custom-header-icon:hover { color: rgb(24, 144, 255) !important; }`}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  chatAvatars: {\r\n    width: 'calc(40px + 14px + 14px)',\r\n    height: '100%',\r\n    display: 'block',\r\n  } as CSSProperties,\r\n  chatHeader: {\r\n    display: 'flex',\r\n    position: 'relative',\r\n    marginLeft: '12px',\r\n    width: 'calc(100% - 12px - 12px)',\r\n    height: '86px',\r\n  } as CSSProperties,\r\n  headerText: {\r\n    display: 'block',\r\n    width: 'calc(100% - 40px - 14px - 14px - 100px)',\r\n    height: '100%',\r\n    position: 'relative',\r\n  } as CSSProperties,\r\n  headerTitle: {\r\n    color: 'white',\r\n    fontSize: '13px',\r\n    fontFamily: 'Avenir',\r\n    paddingTop: '26.5px',\r\n  } as CSSProperties,\r\n  headerSubtitle: {\r\n    fontFamily: 'Avenir',\r\n    color: 'rgb(153, 153, 153)',\r\n    fontSize: '11px',\r\n  } as CSSProperties,\r\n  headerSubtitleMain: {\r\n    fontFamily: 'Avenir',\r\n    color: 'black',\r\n    fontSize: '18px',\r\n    fontWeight: 'bold'\r\n  } as CSSProperties,\r\n  iconWrapper: {\r\n    display: 'block',\r\n    width: '100px',\r\n    height: '100%',\r\n    textAlign: 'right',\r\n  } as CSSProperties,\r\n  headerIcon: {\r\n    marginLeft: '14px',\r\n    paddingTop: 'calc((86px - 15px) / 2)',\r\n    cursor: 'pointer',\r\n    color: 'rgb(153, 153, 153)',\r\n    transition: 'all 0.66s ease',\r\n    ':hover': {\r\n      color: 'rgb(123, 59, 153))', \r\n    }\r\n  } as CSSProperties,\r\n};\r\n\r\nexport default ChatHeader;\r\n","import React, { CSSProperties, useRef, useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { PersonObject } from 'react-chat-engine-advanced';\r\n\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport Select from 'react-select';\r\n\r\nexport interface OptionType {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface ChatFormProps {\r\n  projectId: string;\r\n  username: string;\r\n  secret: string;\r\n  onChange: (users: OptionType[]) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst ChatForm = (props: ChatFormProps) => {\r\n  const didMountRef = useRef(false);\r\n  const [options, setOptions] = useState<OptionType[]>([]);\r\n  const [selected, setSelected] = useState<OptionType[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) {\r\n      didMountRef.current = true;\r\n\r\n      getAllUsers(\r\n        users => {\r\n          const otherUsers = users.filter(\r\n            user => user.username !== props.username\r\n          );\r\n          const options = otherUsers.map(user => {\r\n            return {\r\n              value: JSON.stringify(user),\r\n              label: `${user.first_name} ${user.last_name}`,\r\n            };\r\n          });\r\n          setOptions(options);\r\n        },\r\n        () => console.log('oops!')\r\n      );\r\n    }\r\n  });\r\n\r\n  const getAllUsers = (\r\n    onSuccess: (data: PersonObject[]) => void,\r\n    onError: () => void\r\n  ) => {\r\n    axios\r\n      .get('https://api.chatengine.io/users/search/', {\r\n        headers: {\r\n          'Project-ID': props.projectId,\r\n          'User-Name': props.username,\r\n          'User-Secret': props.secret,\r\n        },\r\n      })\r\n      .then(r => onSuccess(r.data))\r\n      .catch(() => onError);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ce-custom-chat-form\" style={styles.chatForm}>\r\n      <Select\r\n        options={options}\r\n        autoFocus={true}\r\n        isMulti={true}\r\n        onChange={users => {\r\n          setSelected(users as OptionType[]);\r\n          props.onChange(users as OptionType[]);\r\n        }}\r\n        styles={customStyles}\r\n        placeholder=\"Search for users...\"\r\n      />\r\n\r\n      <button\r\n        className=\"ce-create-chat-button\"\r\n        style={{\r\n          ...styles.createChatButton,\r\n          ...(selected.length === 0 && styles.createChatButtonDisabled),\r\n        }}\r\n        onClick={props.onCancel}\r\n        disabled={selected.length === 0}\r\n      >\r\n        <PlusOutlined />\r\n      </button>\r\n\r\n      <style>{`.ce-create-chat-button:hover { background-color: #7b3bc8; }`}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface StateType {\r\n  isFocused: boolean;\r\n}\r\n\r\nconst customStyles = {\r\n  container: () => ({\r\n    width: 'calc(100% - 12px - 12px - 38px - 4px)',\r\n    marginLeft: '12px',\r\n    marginTop: '26px',\r\n  }),\r\n  control: (provided: object) => ({\r\n    ...provided,\r\n    outline: 'none',\r\n    fontFamily: 'Avenir',\r\n    color: 'white',\r\n    backgroundColor: 'white',\r\n    borderRadius: '8px',\r\n    border: '1px solid rgb(123, 59, 153)',\r\n    boxShadow: 'rgb(123, 59, 180 / 35%) 0px 2px 7px',\r\n  }),\r\n  input: (provided: object) => ({\r\n    ...provided,\r\n    color: 'white',\r\n  }),\r\n  placeholder: (provided: object) => ({\r\n    ...provided,\r\n    color: 'rgb(197, 197, 197)',\r\n  }),\r\n  option: (provided: object, state: StateType) => ({\r\n    ...provided,\r\n    fontFamily: 'Avenir',\r\n    color: 'rgb(197, 197, 197)',\r\n    backgroundColor: state.isFocused ? 'rgb(242, 242, 242)' : 'white',\r\n  }),\r\n  noOptionsMessage: (provided: object) => ({\r\n    ...provided,\r\n    fontFamily: 'Avenir',\r\n  }),\r\n  menu: (provided: object) => ({\r\n    ...provided,\r\n    width: 'calc(100% - 12px - 12px - 38px - 4px)',\r\n    backgroundColor: 'white',\r\n  }),\r\n};\r\n\r\nconst styles = {\r\n  chatForm: {\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '86px',\r\n  } as CSSProperties,\r\n  createChatButton: {\r\n    width: '38px',\r\n    height: '38px',\r\n    position: 'absolute',\r\n    right: '12px',\r\n    top: '26px',\r\n    borderRadius: '8px',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.44s ease',\r\n    outline: 'none',\r\n    backgroundColor: 'rgb(123, 59, 153)',\r\n    border: '1px solid rgb(123, 59, 153)',\r\n    fontSize: '18px',\r\n    color: 'white',\r\n    boxShadow: 'rgba(123, 59, 153, 0.35) 0px 5px 15px',\r\n  } as CSSProperties,\r\n  createChatButtonDisabled: {\r\n    cursor: 'not-allowed',\r\n    color: 'white',\r\n    backgroundColor: '#7b3bc8',\r\n    border: '1px solid #7b3bc8',\r\n    boxShadow: 'none',\r\n  } as CSSProperties,\r\n};\r\n\r\nexport default ChatForm;\r\n","import React from 'react';\r\n\r\nimport {\r\n  ChatCard,\r\n  ChatCardProps,\r\n  ChatObject,\r\n} from 'react-chat-engine-advanced';\r\n\r\nimport { getChatTitle, getOtherUsers } from '../functions/getOtherUsers';\r\n\r\nimport OtherAvatars from './OtherAvatars';\r\n\r\ninterface CustomChatCardProps extends ChatCardProps {\r\n  username: string;\r\n  isActive: boolean;\r\n  onChatCardClick: (chatId: number) => void;\r\n  chat?: ChatObject;\r\n}\r\n\r\nconst CustomChatCard = (props: CustomChatCardProps) => {\r\n  const { chat } = props;\r\n\r\n  if (chat === undefined) return <div />;\r\n\r\n  const otherUsers = getOtherUsers(chat, props.username);\r\n  const otherMember = otherUsers.length > 0 ? otherUsers[0] : undefined;\r\n  const username = otherMember ? otherMember.username : '';\r\n  const messageText = chat.last_message.text;\r\n  const hasNotification = chat.last_message.sender_username !== props.username;\r\n\r\n  return (\r\n    <div>\r\n      <style>{`\r\n        .ce-chat-card:hover { border: 1px solid #7B3B99 !important; box-shadow: rgb(170 24 255 / 35%) 0px 2px 7px !important; }\r\n        .ce-chat-card-loading { height: 10px !important; }\r\n        .ce-chat-card-title-loading { top: 16px !important; }\r\n        `}</style>\r\n\r\n      <ChatCard\r\n        title={getChatTitle(chat, props.username)}\r\n        description={\r\n          messageText === null || messageText.length === 0\r\n            ? 'Say hello'\r\n            : messageText\r\n        }\r\n        hasNotification={hasNotification}\r\n        avatarUrl={otherMember?.avatar}\r\n        avatarUsername={username}\r\n        avatarStyle={{\r\n          top: '12px',\r\n          boxShadow: otherMember?.is_online\r\n            ? 'rgb(24 144 255 / 35%) 0px 2px 7px'\r\n            : 'rgb(245 34 45 / 35%) 0px 2px 7px',\r\n          border: otherMember?.is_online\r\n            ? '1px solid rgb(24 144 255)'\r\n            : '1px solid rgb(245 34 45)',\r\n        }}\r\n        isActive={props.isActive}\r\n        renderAvatar={() => (\r\n          <OtherAvatars\r\n            chat={chat}\r\n            username={props.username}\r\n            style={{\r\n              position: 'relative',\r\n              width: '52px',\r\n              top: '-8px',\r\n            }}\r\n          />\r\n        )}\r\n        onClick={() => props.chat && props.onChatCardClick(props.chat.id)}\r\n        style={{\r\n          border: '1px solid #D9D9D9',\r\n          backgroundColor: '#D9D9D9',\r\n          margin: '10px 12px',\r\n          height: '68px',\r\n        }}\r\n        titleStyle={{ color: 'white' }}\r\n        subtitleStyle={{\r\n          bottom: '16px',\r\n          width: 'calc(70% - 44px)',\r\n          color: 'white',\r\n        }}\r\n        timeStampStyle={{\r\n          fontSize: '12px',\r\n          bottom: '16px',\r\n        }}\r\n        activeStyle={{\r\n          border: '1px solid #7B3B99',\r\n          backgroundColor: '#7B3B99',\r\n          boxShadow: 'rgb(246 237 247 / 35%) 0px 2px 7px',\r\n          color: 'white !important' ,\r\n        }}\r\n        notificationStyle={{ top: 'calc((68px - 12px) / 2)' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomChatCard;\r\n","import React, { CSSProperties } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { CaretUpFilled } from '@ant-design/icons';\r\n\r\nimport { MessageObject, MessageFormProps } from 'react-chat-engine-advanced';\r\n\r\nimport { nowTimeStamp } from '../functions/dates';\r\n\r\nconst MessageForm = (props: MessageFormProps) => {\r\n  const [text, setText] = useState<string>('');\r\n  const [isFocused, setIsFocused] = useState<boolean>(false);\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (text.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    setText('');\r\n\r\n    const message: MessageObject = {\r\n      text: text,\r\n      sender_username: props.username ? props.username : '',\r\n      created: nowTimeStamp(),\r\n      custom_json: {},\r\n      attachments: [],\r\n    };\r\n\r\n    props.onSubmit && props.onSubmit(message);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={onSubmit}\r\n      style={styles.messageForm}\r\n      className=\"ce-custom-message-form\"\r\n    >\r\n      <input\r\n        onChange={e => setText(e.target.value)}\r\n        value={text}\r\n        placeholder=\"Write a message...\"\r\n        className=\"ce-custom-message-input\"\r\n        style={{\r\n          ...styles.messageInput,\r\n          ...(isFocused ? styles.messageInputFocused : {}),\r\n        }}\r\n        onFocus={() => setIsFocused(true)}\r\n        onBlur={() => setIsFocused(false)}\r\n      />\r\n      <style>{`.ce-custom-message-input::placeholder { color: #e1e1e1; font-family: Avenir; }`}</style>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"ce-custom-send-button\"\r\n        style={{ ...styles.sendButton }}\r\n      >\r\n        <CaretUpFilled />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  messageForm: {\r\n    height: '68px',\r\n    marginLeft: '12px',\r\n    marginRight: '12px',\r\n    width: 'calc(100% - 12px - 12px)',\r\n    borderRadius: '0px 0px 8px 8px',\r\n    backgroundColor: '#3e404b',\r\n  } as CSSProperties,\r\n  messageInput: {\r\n    marginTop: '6px',\r\n    marginLeft: '3.3vw',\r\n    marginRight: '4px',\r\n    width: 'calc(100% - 3.3vw - 3.3vw - 12px - 12px - 36px - 4px)',\r\n    boxShadow: 'rgba(24, 144, 255, 0.35) 0px 2px 7px',\r\n    border: '1px solid rgb(24, 144, 255)',\r\n    outline: 'none',\r\n    backgroundColor: '#434756',\r\n    color: 'white',\r\n    fontSize: '14px',\r\n    letterSpacing: '0.17px',\r\n    padding: '0px 15px',\r\n    height: '36px',\r\n    borderRadius: '8px 0 0 8px',\r\n    transition: 'all .44s ease',\r\n  } as CSSProperties,\r\n  messageInputFocused: {\r\n    boxShadow: 'rgba(64, 169, 255, 0.35) 0px 2px 7px',\r\n    border: '1px solid #40a9ff',\r\n  } as CSSProperties,\r\n  sendButton: {\r\n    cursor: 'pointer',\r\n    backgroundColor: 'rgb(24, 144, 255)',\r\n    border: '1px solid rgb(24, 144, 255)',\r\n    width: '36px',\r\n    height: '36px',\r\n    borderRadius: '0 8px 8px 0',\r\n    color: 'white',\r\n    boxShadow: 'rgba(24, 144, 255, 0.35) 0px 5px 15px',\r\n    transition: 'all .44s ease',\r\n  } as CSSProperties,\r\n};\r\n\r\nexport default MessageForm;\r\n","import React, { CSSProperties } from 'react';\r\n\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\ninterface ChatListHeaderProps {\r\n  onNewChatClick: () => void;\r\n}\r\n\r\nconst ChatListHeader = (props: ChatListHeaderProps) => {\r\n  return (\r\n    <div style={styles.chatListHeader}>\r\n      <div style={styles.chatListHeaderTitle}>All Messages</div>\r\n\r\n      <button\r\n        className=\"ce-new-chat-button\"\r\n        style={styles.chatListHeaderButton}\r\n        onClick={props.onNewChatClick}\r\n      >\r\n        <FormOutlined />\r\n      </button>\r\n\r\n      <style>{`.ce-new-chat-button:hover { color: rgb(24, 144, 255) !important; }`}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  chatListHeader: {\r\n    display: 'inline-block',\r\n    width: 'calc(100% - 12px - 12px)',\r\n    margin: '0px 12px',\r\n    paddingTop: '28px',\r\n    paddingBottom: '32px',\r\n  } as CSSProperties,\r\n  chatListHeaderTitle: {\r\n    display: 'inline-block',\r\n    color: 'black',\r\n    fontSize: '24px',\r\n    fontFamily: 'Avenir',\r\n    fontWeight: '600',\r\n  } as CSSProperties,\r\n  chatListHeaderButton: {\r\n    display: 'inline-block',\r\n    float: 'right',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.33s ease',\r\n    outline: 'none',\r\n    backgroundColor: 'white',\r\n    fontSize: '18px',\r\n    color: 'black',\r\n  } as CSSProperties,\r\n};\r\n\r\nexport default ChatListHeader;\r\n","import React, { useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  useMultiChatLogic,\r\n  ChatList,\r\n  MultiChatWindowProps,\r\n  MultiChatSocket,\r\n  ChatFeed,\r\n  ChatCardProps,\r\n  ChatHeaderProps,\r\n  MessageFormProps,\r\n  MessageListProps,\r\n  MessageList,\r\n  PersonObject,\r\n} from 'react-chat-engine-advanced';\r\n\r\nimport { useIsMobile } from './functions/isMobile';\r\n\r\nimport ChatHeader from './components/ChatHeader';\r\nimport ChatForm, { OptionType } from './components/ChatForm';\r\nimport ChatCard from './components/ChatCard';\r\nimport MessageForm from './components/MessageForm';\r\nimport ChatListHeader from './components/ChatListHeader';\r\n\r\ninterface PrettyChatWindowProps extends MultiChatWindowProps {\r\n  projectId: string;\r\n  username: string;\r\n  secret: string;\r\n  httpUrl?: string;\r\n  height?: string;\r\n}\r\n\r\nexport const PrettyChatWindow = (props: PrettyChatWindowProps) => {\r\n  const [isChatFormActive, setIsChatFormActive] = useState(false);\r\n  const [chatFormUsers, setChatFromUsers] = useState<PersonObject[]>([]);\r\n  const isMobile: boolean = useIsMobile();\r\n\r\n  const chatProps = useMultiChatLogic(\r\n    props.projectId,\r\n    props.username,\r\n    props.secret,\r\n    props.httpUrl\r\n  );\r\n\r\n  async function getOrCreateChat() {\r\n    const usernames = chatFormUsers.map(user => user.username);\r\n    const data = {\r\n      usernames: usernames,\r\n    };\r\n    const headers = {\r\n      'Project-ID': chatProps.projectId,\r\n      'User-Name': chatProps.username,\r\n      'User-Secret': chatProps.secret,\r\n    };\r\n\r\n    axios.put('https://api.chatengine.io/chats/', data, { headers }).then(r => {\r\n      setIsChatFormActive(false);\r\n      setChatFromUsers([]);\r\n      chatProps.onChatCardClick(r.data.id);\r\n    });\r\n  }\r\n\r\n  const onChatFormChange = (options: OptionType[]) => {\r\n    const users: PersonObject[] = options.map(option =>\r\n      JSON.parse(option.value)\r\n    );\r\n    setChatFromUsers(users);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: props.height ? props.height : '100%',\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: 'white',\r\n      }}\r\n    >\r\n      <MultiChatSocket {...chatProps} />\r\n\r\n      <div style={isMobile ? styles.col0 : styles.col8}>\r\n        <ChatList\r\n          {...chatProps}\r\n          renderChatForm={() => (\r\n            <ChatListHeader\r\n              onNewChatClick={() => {\r\n                chatProps.setActiveChatId(undefined);\r\n                setIsChatFormActive(true);\r\n              }}\r\n            />\r\n          )}\r\n          renderChatCard={(props: ChatCardProps) => (\r\n            <ChatCard\r\n              {...props}\r\n              username={chatProps.username}\r\n              onChatCardClick={(chatId: number) => {\r\n                setIsChatFormActive(false);\r\n                setChatFromUsers([]);\r\n                chatProps.onChatCardClick(chatId);\r\n              }}\r\n              isActive={\r\n                props.chat !== undefined &&\r\n                chatProps.activeChatId === props.chat.id\r\n              }\r\n              chat={props.chat}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n\r\n      <div style={isMobile ? styles.col22 : styles.col14}>\r\n        <ChatFeed\r\n          {...chatProps}\r\n          renderChatHeader={(chatHeaderProps: ChatHeaderProps) => {\r\n            if (isChatFormActive) {\r\n              return (\r\n                <ChatForm\r\n                  projectId={chatProps.projectId}\r\n                  username={chatProps.username}\r\n                  secret={chatProps.secret}\r\n                  onChange={onChatFormChange}\r\n                  onCancel={getOrCreateChat}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <ChatHeader\r\n                  {...chatHeaderProps}\r\n                  chat={chatProps.chat}\r\n                  projectId={chatProps.projectId}\r\n                  username={chatProps.username}\r\n                  secret={chatProps.secret}\r\n                  onDeleteChat={chatProps.onDeleteChat}\r\n                />\r\n              );\r\n            }\r\n          }}\r\n          renderMessageList={(props: MessageListProps) => (\r\n            <MessageList\r\n              {...props}\r\n              renderMessageList={undefined}\r\n              messages={isChatFormActive ? [] : chatProps.messages}\r\n            />\r\n          )}\r\n          renderMessageForm={(props: MessageFormProps) => {\r\n            if (isChatFormActive) {\r\n              return <div style={styles.messageForm} />;\r\n            } else {\r\n              return <MessageForm {...props} />;\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <style>{`\r\n      .ce-chat-list { background-color: white !important;border: .5px solid black !important; margin-top: 4vh !important; !important; margin-right: 2vw !important; margin-left: 2vw !important;border-radius: 40px !important ; padding:25px !important; box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px; !important; }\r\n      .ce-chat-form { background-color: white !important; padding-bottom: 14px !important;  }\r\n      .ce-chat-form-title { color: black !important; }\r\n\r\n      .ce-chat-feed-column { border: none !important;background-color: white  !important; }\r\n      .ce-chat-feed { background-color: white  !important;border: .5px solid black !important; margin-top: 4vh !important; margin-left: 3vw !important; margin-right: 4vw !important; border-radius: 40px !important ; padding:25px !important; box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px; !important; }\r\n      .ce-message-list { margin-top: 24px !important; margin-left: 12px !important; margin-right: 12px !important; padding: 0px 3.3vw !important; background: white !important ; border-radius: 8px 8px 0px 0px !important; height: calc((100% - 85px) - 72px - 24px - 12px) !important; }\r\n\r\n      .ce-message-date-text { font-weight: 600; letter-spacing: 0.1px !important; font-family: 'Avenir' !important; color: rgb(153, 153, 153) !important; font-size: 14px !important; letter-spacing: -1px; }\r\n      .ce-my-message-body { font-family: 'Avenir' !important; padding: 15px !important; background-color: #7B3B99 !important ; min-width: 60px !important;}\r\n      .ce-my-message-timestamp { font-weight: 600; letter-spacing: 0.1px !important; font-family: 'Avenir' !important; font-size: 12px !important; padding: 15px !important; margin-right: 0px !important; letter-spacing: -1px; }\r\n      .ce-their-message-body { font-family: 'Avenir' !important; padding: 15px !important; background-color: #434756 !important; color: white !important; }\r\n      .ce-their-message-timestamp { font-weight: 600; letter-spacing: 0.1px !important; font-family: 'Avenir' !important; font-size: 12px !important; padding: 15px !important; margin-left: 0px !important; letter-spacing: -1px; }\r\n      .ce-their-message-timestamp { color: rgb(241, 240, 240) !important; letter-spacing: -1px; }\r\n      .ce-their-message-sender-username { color: #999 !important; }\r\n      .ce-message-file { background-color: #434758 !important; color: #c5c5c5 !important; border-radius: 8px !important; }\r\n      .ce-message-image { background-color: #434758 !important; color: #c5c5c5 !important; border-radius: 8px !important; padding: 0px !important; max-width: 124px !important; max-height: 124px !important; }\r\n\r\n      .ce-mobile-chat-list-button { top: 32px !important; left: 0px !important; }\r\n      .ce-mobile-chat-settings-button { display: none !important; }\r\n\r\n      .ce-avatar-status { border: 2px solid rgb(40,43,54) !important; width: 7px !important; height: 7px !important; }\r\n      .ce-custom-message-form {background-color: white !important ; color : black !important }\r\n      .ce-custom-message-input {background-color: white !important ; color : black !important ; border : 1px solid #7B3B99 !important; color : black !important ; margin-right: 0px !important }\r\n      .ce-custom-send-button {background-color: #7B3B99 !important ; width: 50px ! important; }\r\n      .ce-custom-chat-header {width: 100% !important; padding-left:2vw !important ; padding-right:2vw !important; border-bottom : 2px solid black !important;}\r\n      .\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  col0: {\r\n    display: 'block',\r\n    flex: '0 0 0%',\r\n    maxWidth: '0%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  col1: {\r\n    display: 'block',\r\n    flex: '0 0 4.16666667%',\r\n    maxWidth: '4.16666667%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  col8: {\r\n    display: 'block',\r\n    flex: '0 0 28.33333%',\r\n    maxWidth: '28.3333%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  col9: {\r\n    display: 'block',\r\n    flex: '0 0 37.5%',\r\n    maxWidth: '37.5%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  col14: {\r\n    display: 'block',\r\n    flex: '0 0 66.33333333%',\r\n    maxWidth: '66.33333333%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  col16: {\r\n    display: 'block',\r\n    flex: '0 0 66.66666667%',\r\n    maxWidth: '66.66666667%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  col22: {\r\n    display: 'block',\r\n    flex: '0 0 91.66666667%',\r\n    maxWidth: '91.66666667%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  col24: {\r\n    display: 'block',\r\n    flex: '0 0 100%',\r\n    maxWidth: '100%',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n  messageForm: {\r\n    height: '68px',\r\n    marginLeft: '12px',\r\n    marginRight: '12px',\r\n    width: 'calc(100% - 12px - 12px)',\r\n    borderRadius: '0px 0px 8px 8px',\r\n    backgroundColor: 'white',\r\n  } as React.CSSProperties,\r\n};\r\n"],"names":["getOtherUsers","chat","username","people","filter","member","person","map","getChatTitle","otherUsers","length","first_name","last_name","title","i","OtherAvatars","props","memberOne","undefined","memberTwo","memberThree","React","style","Avatar","className","avatarUrl","avatar","styles","is_online","online","offline","width","height","lineHeight","fontSize","top","left","display","position","marginLeft","transition","border","boxShadow","nowTimeStamp","Date","toISOString","replace","Math","floor","random","ChatHeader","useState","isFilePickerLoading","setFilePickerLoading","isDeleteLoading","setDeleteLoading","otherMembers","otherMember","chatHeader","chatAvatars","headerText","headerTitle","headerSubtitle","headerSubtitleMain","iconWrapper","htmlFor","LoadingOutlined","color","PaperClipOutlined","headerIcon","multiple","id","visibility","type","onChange","e","headers","Project-ID","projectId","User-Name","User-Secret","secret","formdata","FormData","Array","from","target","files","forEach","file","append","name","JSON","stringify","axios","post","then","DeleteFilled","onClick","r","onDeleteChat","data","fontFamily","paddingTop","fontWeight","textAlign","cursor",":hover","ChatForm","didMountRef","useRef","options","setOptions","selected","setSelected","useEffect","current","getAllUsers","users","user","value","label","console","log","onSuccess","onError","get","chatForm","Select","autoFocus","isMulti","customStyles","placeholder","createChatButton","createChatButtonDisabled","onCancel","disabled","PlusOutlined","container","marginTop","control","provided","outline","backgroundColor","borderRadius","input","option","state","isFocused","noOptionsMessage","menu","right","CustomChatCard","messageText","last_message","text","hasNotification","sender_username","ChatCard","description","avatarUsername","avatarStyle","isActive","renderAvatar","onChatCardClick","margin","titleStyle","subtitleStyle","bottom","timeStampStyle","activeStyle","notificationStyle","MessageForm","setText","setIsFocused","onSubmit","event","preventDefault","trim","message","created","custom_json","attachments","messageForm","messageInput","messageInputFocused","onFocus","onBlur","sendButton","CaretUpFilled","marginRight","letterSpacing","padding","ChatListHeader","chatListHeader","chatListHeaderTitle","chatListHeaderButton","onNewChatClick","FormOutlined","paddingBottom","float","col0","flex","maxWidth","col1","col8","col9","col14","col16","col22","col24","isChatFormActive","setIsChatFormActive","chatFormUsers","setChatFromUsers","isMobile","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useIsMobile","chatProps","useMultiChatLogic","httpUrl","getOrCreateChat","usernames","put","onChatFormChange","parse","justifyContent","MultiChatSocket","ChatList","renderChatForm","setActiveChatId","renderChatCard","chatId","activeChatId","ChatFeed","renderChatHeader","chatHeaderProps","renderMessageList","MessageList","messages","renderMessageForm"],"mappings":"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"}